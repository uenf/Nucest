require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe SupervisoresController do

  def mock_supervisor(stubs={})
    @mock_supervisor ||= mock_model(Supervisor, stubs).as_null_object
  end

  before(:each) do
    @instituicao = Factory.create :instituicao
  end

  describe "GET index" do
    it "assigns all supervisores as @supervisores" do
      Supervisor.stub(:all) { [mock_supervisor] }
      get :index, :instituicao_id => @instituicao.id
      assigns(:supervisores).should eq([mock_supervisor])
    end
  end

  describe "GET show" do
    it "assigns the requested supervisor as @supervisor" do
      Supervisor.stub(:find).with("37") { mock_supervisor }
      get :show, :id => "37", :instituicao_id => @instituicao.id
      assigns(:supervisor).should be(mock_supervisor)
    end
  end

  describe "GET new" do
    it "assigns a new supervisor as @supervisor" do
      Supervisor.stub(:new) { mock_supervisor }
      get :new, :instituicao_id => @instituicao.id
      assigns(:supervisor).should be(mock_supervisor)
    end
  end

  describe "GET edit" do
    it "assigns the requested supervisor as @supervisor" do
      Supervisor.stub(:find).with("37") { mock_supervisor }
      get :edit, :id => "37", :instituicao_id => @instituicao.id
      assigns(:supervisor).should be(mock_supervisor)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created supervisor as @supervisor" do
        Supervisor.stub(:new).with({'these' => 'params'}) { mock_supervisor(:save => true) }
        post :create, :supervisor => {'these' => 'params'}, :instituicao_id => @instituicao.id
        assigns(:supervisor).should be(mock_supervisor)
      end

      it "redirects to the created supervisor" do
        Supervisor.stub(:new) { mock_supervisor(:save => true) }
        post :create, :supervisor => {}, :instituicao_id => @instituicao.id
        response.should redirect_to(supervisor_url(mock_supervisor))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved supervisor as @supervisor" do
        Supervisor.stub(:new).with({'these' => 'params'}) { mock_supervisor(:save => false) }
        post :create, :supervisor => {'these' => 'params'}, :instituicao_id => @instituicao.id
        assigns(:supervisor).should be(mock_supervisor)
      end

      it "re-renders the 'new' template" do
        Supervisor.stub(:new) { mock_supervisor(:save => false) }
        post :create, :supervisor => {}, :instituicao_id => @instituicao.id
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested supervisor" do
        Supervisor.stub(:find).with("37") { mock_supervisor }
        mock_supervisor.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :supervisor => {'these' => 'params'}, :instituicao_id => @instituicao.id
      end

      it "assigns the requested supervisor as @supervisor" do
        Supervisor.stub(:find) { mock_supervisor(:update_attributes => true) }
        put :update, :id => "1", :instituicao_id => @instituicao.id
        assigns(:supervisor).should be(mock_supervisor)
      end

      it "redirects to the supervisor" do
        Supervisor.stub(:find) { mock_supervisor(:update_attributes => true) }
        put :update, :id => "1", :instituicao_id => @instituicao.id
        response.should redirect_to(supervisor_url(mock_supervisor))
      end
    end

    describe "with invalid params" do
      it "assigns the supervisor as @supervisor" do
        Supervisor.stub(:find) { mock_supervisor(:update_attributes => false) }
        put :update, :id => "1", :instituicao_id => @instituicao.id
        assigns(:supervisor).should be(mock_supervisor)
      end

      it "re-renders the 'edit' template" do
        Supervisor.stub(:find) { mock_supervisor(:update_attributes => false) }
        put :update, :id => "1", :instituicao_id => @instituicao.id
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested supervisor" do
      Supervisor.stub(:find).with("37") { mock_supervisor }
      mock_supervisor.should_receive(:destroy)
      delete :destroy, :id => "37", :instituicao_id => @instituicao.id
    end

    it "redirects to the supervisores list" do
      Supervisor.stub(:find) { mock_supervisor }
      delete :destroy, :id => "1", :instituicao_id => @instituicao.id
      response.should redirect_to(supervisores_url)
    end
  end

end

